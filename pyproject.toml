[tool.poetry]
name = "mcrppy"
version = "0.1.0"
description = "Simulating a repelled point process and Monte carlo methods for numerical integration"
license = "MIT"
authors = ["Diala Hawat <dialahawat7@gmail.com>"]
maintainers = ["Diala Hawat <dialahawat7@gmail.com>"]
readme = "README.md"
keywords = ["Repelled point process", "Monte Carlo method"]

# Main dependencies
[tool.poetry.dependencies]
python = ">=3.8,<3.10"
jupyter = { version = "^1.0.0", optional = true }
notebook = { version = "^6.5.2", optional = true }
scikit-learn = "^1.2.0"
numpy = "<=1.20.3"
statsmodels = "^0.13.5"
# extra
structure-factor = { version = "^2.2.1", python = ">=3.7,<3.10", optional = true }
sphinx = { version = "^4.0.3", optional = true }
sphinxcontrib-bibtex = { version = "^2.5.0", optional = true }
sphinxcontrib-proof = { version = "^1.5.0", optional = true }
rstcheck = { version = "^6.1.2", optional = true }
sphinx-rtd-theme = { version = "^1.0.0", optional = true }

[tool.poetry.extras]
structure-factor = ["structure-factor"]
docs = [
    "sphinx",
    "sphinxcontrib-bibtex",
    "sphinxcontrib-proof",
    "rstcheck",
    "sphinx-rtd-theme",
]

[tool.poetry.dev-dependencies]
pytest = "^7.2.0"
pytest-cov = "^4.0.0"
dppy = "^0.3.2"
ipykernel = "^6.22.0"

[tool.pytest.ini_options]
# poetry run pytest
minversion = "6.0"
addopts = "-ra -q -vv --cov=packagename --cov-report=term-missing --cov-report=xml"
testpaths = ["tests"]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
